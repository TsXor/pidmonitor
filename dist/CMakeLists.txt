cmake_minimum_required(VERSION 3.15)

function(import_extern_dll target_name dll_name path)
    if(MSVC)
        set(lib_type SHARED)
    else()
        set(lib_type MODULE)
    endif()
    if(${path} STREQUAL MS_BUILTIN)
        if(MSVC)
            set(dll_path ${dll_name}.dll)
            set(lib_path ${dll_name}.lib)
        else()
            if(${ARCH} STREQUAL "x32" AND ${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL "AMD64")
                set(dll_path C:/Windows/SysWoW64/${dll_name}.dll)
                set(lib_path C:/Windows/SysWoW64/${dll_name}.lib)
            else()
                set(dll_path C:/Windows/System32/${dll_name}.dll)
                set(lib_path C:/Windows/System32/${dll_name}.lib)
            endif()
        endif()
    else()
        set(dll_path ${path}/${dll_name}.dll)
        set(lib_path ${path}/${dll_name}.lib)
    endif()
    add_library(${target_name} ${lib_type} IMPORTED)
    set_property(TARGET ${target_name} PROPERTY
                IMPORTED_LOCATION ${dll_path})
    set_property(TARGET ${target_name} PROPERTY
                IMPORTED_IMPLIB ${lib_path})
endfunction()

if (NOT DEFINED PIDMONITOR_ARCH)
    message(STATUS "pidmonitor: PIDMONITOR_ARCH not set, default to x64 ...")
    set(PIDMONITOR_ARCH "x64")
endif()

# import windows dlls
import_extern_dll(winlib_ole ole32 MS_BUILTIN)
import_extern_dll(winlib_oleauto oleaut32 MS_BUILTIN)

add_library(pidmonitor STATIC IMPORTED GLOBAL)
set_target_properties(pidmonitor PROPERTIES
    IMPORTED_LOCATION ${CMAKE_CURRENT_LIST_DIR}/lib/${PIDMONITOR_ARCH}/libpidmonitor.a)
target_link_libraries(pidmonitor INTERFACE winlib_ole)
target_link_libraries(pidmonitor INTERFACE winlib_oleauto)
target_link_libraries(pidmonitor INTERFACE wbemuuid)
